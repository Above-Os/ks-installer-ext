---
- name: DMP | Getting dmp installation files
  copy:
    src: "dmp"
    dest: "{{ kubesphere_dir }}/"

- name: DMP | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/dmp/{{ item.path }}/{{ item.file }}"
  with_items:
    - { path: clickhouse, file: custom-values-clickhouse-operator.yaml }
    - { path: mysql, file: custom-values-mysql-operator.yaml }
    - { path: pg, file: custom-values-pg-operator.yaml }
    - { path: pg, file: custom-values-pg-cluster.yaml }

- name: DMP | Installing clickhouse operator
  shell: >
    {{ bin_dir }}/helm upgrade --install clickhouse-operator
    {{ kubesphere_dir }}/dmp/clickhouse/clickhouse-operator
    -f {{ kubesphere_dir }}/dmp/clickhouse/custom-values-clickhouse-operator.yaml
    --namespace kube-system
    --create-namespace
  register: result
  until: result is succeeded
  retries: 3

- name: DMP | Installing mysql operator
  shell: >
    {{ bin_dir }}/helm upgrade --install mysql-operator
    {{ kubesphere_dir }}/dmp/mysql/mysql-operator
    -f {{ kubesphere_dir }}/dmp/mysql/custom-values-mysql-operator.yaml
    --namespace dmp-system
    --create-namespace
  register: result
  until: result is succeeded
  retries: 3

- name: DMP | Installing pg operator
  shell: >
    {{ bin_dir }}/helm upgrade --install pg-operator
    {{ kubesphere_dir }}/dmp/pg/pg-operator
    -f {{ kubesphere_dir }}/dmp/pg/custom-values-pg-operator.yaml
    --namespace pgo
    --create-namespace
  register: result
  until: result is succeeded
  retries: 3

- name: DMP | Installing pg cluster
  shell: >
    {{ bin_dir }}/helm upgrade --install pg-cluster
    {{ kubesphere_dir }}/dmp/pg/pg-cluster
    -f {{ kubesphere_dir }}/dmp/pg/custom-values-pg-cluster.yaml
    --namespace pgo
    --create-namespace
  register: result
  until: result is succeeded
  retries: 3

- name: DMP | Creating applications
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/dmp/{{ item.path }}/{{ item.file }}
  loop:
    - {path: "clickhouse", file: "clickhouse_app.yaml"}
    - {path: "clickhouse", file: "clickhouse_app_version.yaml"}
    - {path: "mysql", file: "mysql_app.yaml"}
    - {path: "mysql", file: "mysql_app_version.yaml"}
    - {path: "pg", file: "pg_app.yaml"}
    - {path: "pg", file: "pg_app_version.yaml"}
  register: result
  until: result is succeeded
  retries: 3

- name: DMP | Importing DMP status
  shell: >
    {{ bin_dir }}/kubectl patch cc ks-installer
    --type merge
    -p '{"status": {"dmp": {"status": "enabled", "enabledTime": "{{ lookup('pipe','date  +%Y-%m-%dT%H:%M:%S%Z') }}"}}}'
    -n kubesphere-system
  register: cc_result
  failed_when: "cc_result.stderr and 'Warning' not in cc_result.stderr"
  until: cc_result is succeeded
  retries: 5
  delay: 3
